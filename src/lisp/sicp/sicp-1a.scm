(define (square x)
  (* x x))
(define (sum-of-squares x y)
  (+ (square x)
     (square y)))

(define (sqrt-block-struct x)
  (define (f guess)
    (- (square guess) x))
  (define (grad guess)
    (* 2 guess))
  (define (improve-guess guess)
    (- guess (/ (f guess)
                (grad guess))))
  (define (good-enough? guess)
    (< (abs (f guess))
       0.001))
  (define (sqrt-iter guess)
    (if (good-enough? guess)
        guess
        (sqrt-iter (improve-guess guess))))
  (sqrt-iter 1.0))
