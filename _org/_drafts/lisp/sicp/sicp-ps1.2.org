#+BEGIN_EXPORT html
---
layout: post
title: SICP Problem Set 1.2
---

<script src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML" type="text/javascript"></script>
#+END_EXPORT

#+BEGIN_SRC scheme
  (define (A x y)
    (cond ((= y 0)
           0)
          ((= x 0)
           (* 2 y))
          ((= y 1)
           2)
          (else
           (A (- x 1)
              (A x (- y 1))))))

  (define (f n)
    (A 0 n))
  (define (g n)
    (A 1 n))
  (define (h n)
    (A 2 n))
  (define (k n)
    (* 5 n n))

  (define (f-r n)
    (if (< n 3)
        n
        (+ (f-r (- n 1))
           (* 2 (f-r (- n 2)))
           (* 3 (f-r (- n 3))))))
  (define (f-i n)
    (define (f f1 f2 f3 ctr)
      (define (f-n f1 f2 f3)
        (+ f1 (* 2 f2) (* 3 f3)))
      (if (= ctr n)
          (f-n f1 f2 f3)
          (f (f-n f1 f2 f3)
             f1
             f2
             (+ ctr 1))))
    (if (< n 3)
        n
        (f 2 1 0 3)))

  (define (fast-expt b n)
    (define (expt-iter a b n)
      (cond ((= n 0)
             a)
            ((even? n)
             (expt-iter a (* b b) (/ n 2)))
            (else
             (expt-iter (* a b) b (- n 1)))))
    (expt-iter 1 b n))

  (define (double x)
    (+ x x))
  (define (halve x)
    (/ x 2))
  (define (fast-mult a b)
    (cond ((= b 0)
           0)
          ((= b 1)
           a)
          ((even? b)
           (double (fast-mult a (halve b))))
          (else
           (+ a (fast-mult a (- b 1))))))

  (define (fast-mult-iter a b)
    (define (run m a b)
      (cond ((= b 0)
             m)
            ((even? b)
             (run m (double a) (halve b)))
            (else
             (run (+ m a) a (- b 1)))))
    (run 0 a b))

  (define (fibl n)
    (define (T a b p q ctr)
      (define (pprime)
        (+ (* p p)
           (* q q)))
      (define (qprime)
        (* (+ (* 2 p) q)
           q))
      (define (Ta)
        (+ (* a (+ p q))
           (* b q)))
      (define (Tb)
        (+ (* a q)
           (* b p)))
      (cond ((= ctr 0)
             b)
            ((even? ctr)
             (T a b (pprime) (qprime) (/ ctr 2)))
            (else
             (T (Ta) (Tb) p q (- ctr 1)))))
    (T 1 0 0 1 n))

  (define (gcd a b)
    (if (= b 0)
        a
        (gcd b (remainder a b))))
  ;; (gcd 206 40)
  ;; (gcd 40 6)
  ;; (gcd 6 4)
  ;; (gcd 4 2)
  ;; (gcd 2 0)
  ;; 2
#+END_SRC
