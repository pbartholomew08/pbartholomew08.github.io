#+BEGIN_EXPORT html
---
layout: post
title: SICP Lecture 1B - Procedures and Processes; The Substitution Model
---

<script src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML" type="text/javascript"></script>
#+END_EXPORT

/This lecture covers mostly \S1.2 of the textbook./

* The substitution model 

To effectively design procedures a model for the processes they generate is required - the
/substitution model/ is a simple model which will suffice to begin investigating this relationship.
The substitution model evaluates a combination as follows:
1) Evaluate the operator to get the procedure
2) Evaluate the operands to get arguments
3) Apply the procedure to the arguments:
   - Copy the body of the procedure, replacing the formal parameters with the values of the supplied
     arguments
   - Evaluate the resulting new body
this process is recursive and continues until primitives which can be evaluated directly are
reached.
As an example evaluating ~(sos 3 4)~ using the substitution model would play out like:

#+CAPTION: Evaluating a combination using the substitution model
#+NAME: src:subst-model-example
#+BEGIN_SRC scheme
  (define (square x)
    (* x x))
  (define (sos x y)
    (+ (square x)
       (square y)))

  (sos 3 4)
  (+ (square 3) (square 4))
  (+ (square 3) (* 4 4))
  (+ (square 3) 16)
  (+ (* 3 3) 16)
  (+ 9 16)
  25
#+END_SRC

** Normal-order evaluation

The example above used /applicative-order/ evaluation, evaluating the operator and operands
immediately before applying the procedure - this is the approach used by =scheme=.
Alternatively /normal-order/ evaluation only evaluates operands when their values are needed, /e.g./
#+CAPTION: Normal-order evaluation example
#+NAME: src:subs-model-example-normal-order
#+BEGIN_SRC scheme
  (sos 3 4)
  (+ (square 3) (square 4))
  (+ (square 3) (* 4 4))
  (+ (* 3 3) (* 4 4))
  (+ (* 3 3) 16)
  (+ 9 16)
  25
#+END_SRC

** Special forms: conditionals

** Example: P\eacute{}ano arithmetic
* Processes from procedures
* Problem set 1
